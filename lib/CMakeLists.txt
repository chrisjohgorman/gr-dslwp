# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-dslwp
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

list(APPEND dslwp_sources
    ccsds/fifobuf.c
    ccsds/ccsds.c
    ccsds/metrics.c
    ccsds/rs.c
    ccsds/tab.c
    ccsds/viterbi27.c
    kiss/kiss.c
    ccsds/randomizer.c
    ccsds/libturbocodes.c
    ccsds/libconvcodes.c
    tm_header_parser_impl.cc
    tm_parser_impl.cc
    steam_to_vector_moving_window_cc_impl.cc
    vector_padding_cc_impl.cc
    fft_estimator_cc_impl.cc
    set_gain_by_tag_cc_impl.cc
    oqpsk_coherent_demod_cc_impl.cc
    frame_spliter_c_impl.cc
    ccsds_turbo_encode_impl.cc
    ccsds_turbo_decode_impl.cc
    attach_sync_marker_impl.cc
    ccsds_pseudo_randomizer_impl.cc
    ccsds_pseudo_randomizer_impl.cc
    kiss_encode_pdu_impl.cc
    kiss_decode_pdu_impl.cc
    fec_encode_b_impl.cc
    differential_phase_detection_1bit_cf_impl.cc
    frame_spliter_f_impl.cc
    program_tracking_cc_impl.cc
    lrtc_mod_bc_impl.cc )

set(dslwp_sources "${dslwp_sources}" PARENT_SCOPE)
if(NOT dslwp_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT dslwp_sources)

add_library(gnuradio-dslwp SHARED ${dslwp_sources})
target_link_libraries(gnuradio-dslwp gnuradio::gnuradio-runtime
    gnuradio::gnuradio-blocks gnuradio::gnuradio-fft
    gnuradio::gnuradio-filter Volk::volk)
target_include_directories(gnuradio-dslwp
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-dslwp PROPERTIES DEFINE_SYMBOL "gnuradio_dslwp_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-dslwp PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-dslwp)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_dslwp_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-dslwp)

if(NOT test_dslwp_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_dslwp_sources)

foreach(qa_file ${test_dslwp_sources})
    GR_ADD_CPP_TEST("dslwp_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
